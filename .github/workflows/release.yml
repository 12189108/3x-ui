name: Rebuild 3X-UI

on:
  workflow_dispatch:

jobs:
  delete_assets:
    runs-on: ubuntu-20.04
    outputs:
      RELEASE_TAG: ${{ steps.get_tag.outputs.RELEASE_TAG }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Delete all tags
        run: |
          # 配置 Git
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          
          # 删除所有本地标签
          git tag | xargs git tag -d
          
          echo "All tags have been deleted"
        continue-on-error: true
        
      - name: Get latest tag
        id: get_tag
        run: |
          git remote add upstream https://github.com/MHSanaei/3x-ui.git
          git fetch upstream --tags
          LATEST_TAG=$(git tag -l "v*" | sort -V | tail -1)
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="v1.0.0"
          fi
          echo "RELEASE_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "RELEASE_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "Latest tag: $LATEST_TAG"
        continue-on-error: true

      - name: Delete existing release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.RELEASE_TAG }}
          fail-if-no-assets: false
          assets: |
            x-ui-linux-*.tar.gz
        continue-on-error: true

  build:
    needs: delete_assets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go and build
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          prepare: |
            pkg install -y wget curl tar zip unzip 
            curl -O https://golang.google.cn/dl/go1.23.2.freebsd-amd64.tar.gz
            rm -rf /usr/local/go && tar -C /usr/local -xzf go1.23.2.freebsd-amd64.tar.gz
            export PATH=$PATH:/usr/local/go/bin
            source $HOME/.profile
          run: |
            export CGO_ENABLED=1
            export GOOS=freebsd
            export GOARCH=amd64
            go build -o xui-release -v main.go
            mkdir x-ui
            cp xui-release x-ui/
            cp x-ui.service x-ui/
            cp x-ui.sh x-ui/
            mv x-ui/xui-release x-ui/x-ui
            mkdir x-ui/bin
            cd x-ui/bin
            curl -O https://github.com/XTLS/Xray-core/releases/download/v24.9.30/Xray-freebsd-64.zip
            unzip Xray-freebsd-64.zip
            rm -f Xray-freebsd-64.zip
            
            rm -f geoip.dat geosite.dat
            curl -O https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geoip.dat
            curl -O https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat
            curl -O geoip_IR.dat https://github.com/chocolate4u/Iran-v2ray-rules/releases/latest/download/geoip.dat
            curl -O geosite_IR.dat https://github.com/chocolate4u/Iran-v2ray-rules/releases/latest/download/geosite.dat
            curl -O geoip_VN.dat https://github.com/vuong2023/vn-v2ray-rules/releases/latest/download/geoip.dat
            curl -O geosite_VN.dat https://github.com/vuong2023/vn-v2ray-rules/releases/latest/download/geosite.dat
            mv xray xray-freebsd-64
            cd ../..
          
      - name: Package
        run: tar -zcvf x-ui-freebsd-64.tar.gz x-ui

      - name: Upload files to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: x-ui-freebsd-64
          path: ./x-ui-freebsd-64.tar.gz

      - name: Upload files to GH release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{needs.delete_assets.outputs.RELEASE_TAG}}
          file: x-ui-freebsd-64.tar.gz
          asset_name: x-ui-freebsd-64.tar.gz
          prerelease: false
